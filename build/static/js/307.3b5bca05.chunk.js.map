{"version":3,"file":"static/js/307.3b5bca05.chunk.js","mappings":"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","sources":["webpack://frontend/./src/styles/pages/Auth.module.css?5878","pages/Auth.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Auth_content__bWCUY\",\"header\":\"Auth_header__f7Mse\",\"underline\":\"Auth_underline__5VX1X\",\"container\":\"Auth_container__Qco4n\"};","import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n//validators\r\nimport { VALIDATOR_EMAIL, VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../utils/validators'\r\n//styles\r\nimport styles from '../styles/pages/Auth.module.css'\r\n//components\r\nimport Input from '../components/form-elements/Input'\r\nimport Button from '../components/form-elements/Button'\r\nimport Loading from '../components/UI-elements/Loading'\r\nimport Error from '../components/UI-elements/Error'\r\n//redux\r\nimport { useDispatch } from 'react-redux'\r\nimport { userAction } from '../store/slices/userSlice'\r\n//hooks\r\nimport useForm from '../hooks/useForm'\r\nimport useHttp from '../hooks/useHttp'\r\n\r\nconst Auth = () => {\r\n\tconst dispatch = useDispatch()\r\n\tconst navigate = useNavigate()\r\n\r\n\tconst { sendRequest, isLoading, error, clearError } = useHttp()\r\n\tconst { formState, inputHandler, setFormData } = useForm(\r\n\t\t{\r\n\t\t\temail: {\r\n\t\t\t\tvalue: '',\r\n\t\t\t\tisValid: false,\r\n\t\t\t},\r\n\t\t\tpassword: {\r\n\t\t\t\tvalue: '',\r\n\t\t\t\tisValid: false,\r\n\t\t\t},\r\n\t\t},\r\n\t\tfalse\r\n\t)\r\n\r\n\tconst [isLoginMode, setIsLoginMode] = useState(true)\r\n\r\n\tconst toggleMode = () => {\r\n\t\tclearError()\r\n\t\tif (!isLoginMode) {\r\n\t\t\tsetFormData(\r\n\t\t\t\t{ ...formState.inputs, name: undefined },\r\n\t\t\t\tformState.inputs.email.isValid && formState.inputs.password.isValid\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\tsetFormData(\r\n\t\t\t\t{\r\n\t\t\t\t\t...formState.inputs,\r\n\t\t\t\t\tname: {\r\n\t\t\t\t\t\tvalue: '',\r\n\t\t\t\t\t\tisValid: false,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tfalse\r\n\t\t\t)\r\n\t\t}\r\n\t\tsetIsLoginMode(prevState => !prevState)\r\n\t}\r\n\r\n\tconst onSubmitHandler = async e => {\r\n\t\te.preventDefault()\r\n\t\tif (isLoginMode) {\r\n\t\t\ttry {\r\n\t\t\t\tconst responseData = await sendRequest(\r\n\t\t\t\t\t'/api/user/login',\r\n\t\t\t\t\t'POST',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tJSON.stringify({\r\n\t\t\t\t\t\temail: formState.inputs.email.value,\r\n\t\t\t\t\t\tpassword: formState.inputs.password.value,\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tuserAction.login({\r\n\t\t\t\t\t\tuserId: responseData.userId,\r\n\t\t\t\t\t\ttoken: responseData.token,\r\n\t\t\t\t\t\temail: responseData.email,\r\n\t\t\t\t\t\tname: responseData.name,\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\tnavigate('/')\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tconst responseData = await sendRequest(\r\n\t\t\t\t\t'/api/user/signup',\r\n\t\t\t\t\t'POST',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tJSON.stringify({\r\n\t\t\t\t\t\tname: formState.inputs.name.value,\r\n\t\t\t\t\t\temail: formState.inputs.email.value,\r\n\t\t\t\t\t\tpassword: formState.inputs.password.value,\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tuserAction.login({\r\n\t\t\t\t\t\tuserId: responseData.userId,\r\n\t\t\t\t\t\ttoken: responseData.token,\r\n\t\t\t\t\t\temail: responseData.email,\r\n\t\t\t\t\t\tname: responseData.name,\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\tnavigate('/')\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst underlineClass = isLoginMode ? 'underline' : ''\r\n\treturn (\r\n\t\t<div className={styles['container']}>\r\n\t\t\t<div className={styles['content']}>\r\n\t\t\t\t<div className={`${styles['header']} ${styles[underlineClass]}`}>\r\n\t\t\t\t\t<button onClick={toggleMode} className={`title-text ${isLoginMode && 'active'}`}>\r\n\t\t\t\t\t\tlogin\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button onClick={toggleMode} className={`title-text ${!isLoginMode && 'active'}`}>\r\n\t\t\t\t\t\tsign up\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<form onSubmit={onSubmitHandler}>\r\n\t\t\t\t{!isLoginMode && (\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tid='name'\r\n\t\t\t\t\t\telement='input'\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\tonInput={inputHandler}\r\n\t\t\t\t\t\terrorText='Please enter a valid name.'\r\n\t\t\t\t\t\tvalidators={[VALIDATOR_REQUIRE()]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t<Input\r\n\t\t\t\t\tid='email'\r\n\t\t\t\t\telement='input'\r\n\t\t\t\t\ttype='email'\r\n\t\t\t\t\tlabel='E-mail'\r\n\t\t\t\t\tonInput={inputHandler}\r\n\t\t\t\t\terrorText='Please enter a valid e-mail.'\r\n\t\t\t\t\tvalidators={[VALIDATOR_EMAIL()]}\r\n\t\t\t\t/>\r\n\t\t\t\t<Input\r\n\t\t\t\t\tid='password'\r\n\t\t\t\t\telement='input'\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\tonInput={inputHandler}\r\n\t\t\t\t\terrorText='Please enter a valid password.(6 characters required).'\r\n\t\t\t\t\tvalidators={[VALIDATOR_MINLENGTH(6)]}\r\n\t\t\t\t/>\r\n\t\t\t\t{error && <Error onClose={clearError}>{error}</Error>}\r\n\t\t\t\t{isLoading ? (\r\n\t\t\t\t\t<Loading />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Button disabled={!formState.isValid} type='submit'>\r\n\t\t\t\t\t\t{isLoginMode ? 'LOGIN' : 'SIGN IN'}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t)}\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Auth\r\n"],"names":["dispatch","useDispatch","navigate","useNavigate","useHttp","sendRequest","isLoading","error","clearError","useForm","email","value","isValid","password","formState","inputHandler","setFormData","useState","isLoginMode","setIsLoginMode","toggleMode","inputs","name","undefined","prevState","onSubmitHandler","e","preventDefault","JSON","stringify","responseData","userAction","userId","token","console","log","underlineClass","className","styles","onClick","onSubmit","Input","id","element","type","label","onInput","errorText","validators","VALIDATOR_REQUIRE","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","Error","onClose","Loading","Button","disabled"],"sourceRoot":""}