{"version":3,"file":"static/js/801.209532f5.chunk.js","mappings":"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","sources":["webpack://frontend/./src/styles/pages/NewAnnouncement.module.css?2f8e","webpack://frontend/./src/styles/form-elements/ImageInput.module.css?a7fb","components/form-elements/ImageInput.js","pages/NewAnnouncement.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"new-announcement-container\":\"NewAnnouncement_new-announcement-container__EEbYD\",\"form-container\":\"NewAnnouncement_form-container__yZp7f\"};","// extracted by mini-css-extract-plugin\nexport default {\"img-form\":\"ImageInput_img-form__GnhPT\",\"input-controller\":\"ImageInput_input-controller__oC9kg\",\"img-preview\":\"ImageInput_img-preview__EInIg\"};","import React, { useEffect, useRef, useState } from 'react'\r\n//styles\r\nimport styles from '../../styles/form-elements/ImageInput.module.css'\r\n//components\r\nimport Button from '../form-elements/Button'\r\nconst ImageInput = props => {\r\n\tconst [file, setFile] = useState()\r\n\tconst [isValid, setIsValid] = useState(false)\r\n\tconst [previewUrl, setPreviewUrl] = useState()\r\n\r\n\tconst fileRef = useRef()\r\n\tconst { id, onInput } = props\r\n\tuseEffect(() => {\r\n\t\tonInput(id, file, isValid)\r\n\t\tif (!file) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst fileReader = new FileReader()\r\n\t\tfileReader.onload = () => {\r\n\t\t\tsetPreviewUrl(fileReader.result)\r\n\t\t}\r\n\t\tfileReader.readAsDataURL(file)\r\n\t}, [file])\r\n\r\n\tconst pickedHandler = e => {\r\n\t\tlet pickedFile\r\n\t\tlet fileIsValid = isValid\r\n\t\tif (e.target.files && e.target.files.length === 1) {\r\n\t\t\tpickedFile = e.target.files[0]\r\n\t\t\tsetFile(pickedFile)\r\n\t\t\tsetIsValid(true)\r\n\t\t\tfileIsValid = true\r\n\t\t} else {\r\n\t\t\tsetIsValid(false)\r\n\t\t\tfileIsValid = false\r\n\t\t}\r\n\t\tonInput(id, pickedFile, fileIsValid)\r\n\t}\r\n\tconst pickImageHandler = () => {\r\n\t\tfileRef.current.click()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={styles['img-form']}>\r\n\t\t\t<input\r\n\t\t\t\tid={props.id}\r\n\t\t\t\ttype='file'\r\n\t\t\t\taccept='.jpg,.png,.jpeg'\r\n\t\t\t\tref={fileRef}\r\n\t\t\t\tonChange={pickedHandler}\r\n\t\t\t\tstyle={{ display: 'none' }}\r\n\t\t\t/>\r\n\r\n\t\t\t<div className={styles['input-controller']}>\r\n\t\t\t\t<div className={styles['img-preview']}>\r\n\t\t\t\t\t{previewUrl ? <img src={previewUrl} alt='Preview' /> : <p className='title-text'>↓choose image↓</p>}\r\n\t\t\t\t</div>\r\n\t\t\t\t<Button onClick={pickImageHandler}>pick image</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ImageInput\r\n","import React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n//validators\r\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../utils/validators'\r\n//styles\r\nimport styles from '../styles/pages/NewAnnouncement.module.css'\r\n//components\r\nimport Input from '../components/form-elements/Input'\r\nimport Button from '../components/form-elements/Button'\r\nimport ImageInput from '../components/form-elements/ImageInput'\r\nimport Loading from '../components/UI-elements/Loading'\r\nimport Error from '../components/UI-elements/Error'\r\n//hooks\r\nimport useForm from '../hooks/useForm'\r\nimport useHttp from '../hooks/useHttp'\r\n//data\r\nimport data from '../data/categories.json'\r\n//redux\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst NewAnnouncement = () => {\r\n\tconst navigate = useNavigate()\r\n\tconst user = useSelector(state => state.user)\r\n\r\n\tconst { isLoading, sendRequest, error, clearError } = useHttp()\r\n\tconst { formState, inputHandler } = useForm(\r\n\t\t{\r\n\t\t\ttitle: {\r\n\t\t\t\tvalue: '',\r\n\t\t\t\tisValid: false,\r\n\t\t\t},\r\n\t\t\taddress: {\r\n\t\t\t\tvalue: '',\r\n\t\t\t\tisValid: false,\r\n\t\t\t},\r\n\t\t\tprice: {\r\n\t\t\t\tvalue: 0,\r\n\t\t\t\tisValid: false,\r\n\t\t\t},\r\n\t\t\tcategory: {\r\n\t\t\t\tvalue: '',\r\n\t\t\t\tisValid: false,\r\n\t\t\t},\r\n\t\t\timage: {\r\n\t\t\t\tvalue: null,\r\n\t\t\t\tisValid: false,\r\n\t\t\t},\r\n\t\t\tdescription: {\r\n\t\t\t\tvalue: '',\r\n\t\t\t\tisValid: false,\r\n\t\t\t},\r\n\t\t},\r\n\t\tfalse\r\n\t)\r\n\r\n\tconst onAddAnnouncementHandler = async e => {\r\n\t\te.preventDefault()\r\n\r\n\t\tconst formData = new FormData()\r\n\t\tformData.append('title', formState.inputs.title.value)\r\n\t\tformData.append('description', formState.inputs.description.value)\r\n\t\tformData.append('address', formState.inputs.address.value)\r\n\t\tformData.append('category', formState.inputs.category.value)\r\n\t\tformData.append('price', formState.inputs.price.value)\r\n\t\tformData.append('image', formState.inputs.image.value)\r\n\t\tformData.append('creator', user.userId)\r\n\r\n\t\ttry {\r\n\t\t\tawait sendRequest(\r\n\t\t\t\t'/api/announcement/new-announcement',\r\n\t\t\t\t'POST',\r\n\t\t\t\t{ Authorization: 'Bearer ' + user.token },\r\n\t\t\t\tformData\r\n\t\t\t)\r\n\t\t\tnavigate('/account')\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error)\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<div className={styles['new-announcement-container']}>\r\n\t\t\t<h1 className='title-text'>add announcement</h1>\r\n\t\t\t<div className={styles['form-container']}>\r\n\t\t\t\t<form onSubmit={onAddAnnouncementHandler}>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tid='title'\r\n\t\t\t\t\t\telement='input'\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\terrorText='Please enter a valid title.'\r\n\t\t\t\t\t\tonInput={inputHandler}\r\n\t\t\t\t\t\tvalidators={[VALIDATOR_REQUIRE()]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tid='address'\r\n\t\t\t\t\t\telement='input'\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\terrorText='Please enter a valid address.'\r\n\t\t\t\t\t\tonInput={inputHandler}\r\n\t\t\t\t\t\tvalidators={[VALIDATOR_REQUIRE()]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tid='price'\r\n\t\t\t\t\t\telement='input'\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tlabel='Price [zł]'\r\n\t\t\t\t\t\terrorText='Please enter a valid price.'\r\n\t\t\t\t\t\tonInput={inputHandler}\r\n\t\t\t\t\t\tvalidators={[VALIDATOR_REQUIRE()]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tid='category'\r\n\t\t\t\t\t\telement='select'\r\n\t\t\t\t\t\tonInput={inputHandler}\r\n\t\t\t\t\t\tvalidators={[VALIDATOR_REQUIRE()]}\r\n\t\t\t\t\t\terrorText='Please enter a valid categpry.'\r\n\t\t\t\t\t\tlabel='Category'>\r\n\t\t\t\t\t\t{data.categories.map(option => (\r\n\t\t\t\t\t\t\t<option key={option.id} value={option.name}>\r\n\t\t\t\t\t\t\t\t{option.name}\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Input>\r\n\t\t\t\t\t<ImageInput id='image' onInput={inputHandler} />\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tid='description'\r\n\t\t\t\t\t\telement='textarea'\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\terrorText='Please enter a valid description. (10 characters required)'\r\n\t\t\t\t\t\tonInput={inputHandler}\r\n\t\t\t\t\t\tvalidators={[VALIDATOR_MINLENGTH(10)]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{error && <Error clearError={clearError} />}\r\n\t\t\t\t\t<Button disabled={!formState.isValid} type='submit'>\r\n\t\t\t\t\t\t{isLoading ? <Loading /> : 'add'}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default NewAnnouncement\r\n"],"names":["props","useState","file","setFile","isValid","setIsValid","previewUrl","setPreviewUrl","fileRef","useRef","id","onInput","useEffect","fileReader","FileReader","onload","result","readAsDataURL","className","styles","type","accept","ref","onChange","e","pickedFile","fileIsValid","target","files","length","style","display","src","alt","Button","onClick","current","click","navigate","useNavigate","user","useSelector","state","useHttp","isLoading","sendRequest","error","clearError","useForm","title","value","address","price","category","image","description","formState","inputHandler","onAddAnnouncementHandler","preventDefault","formData","FormData","append","inputs","userId","Authorization","token","console","log","onSubmit","Input","element","label","errorText","validators","VALIDATOR_REQUIRE","data","option","name","VALIDATOR_MINLENGTH","Error","disabled","Loading"],"sourceRoot":""}